import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

(x_train,y_train),(x_test,y_test) = keras.dataset.mnist.load_data()

# Normalização dos dados para 0-1
x_train = x_train.astype("float32")/255.0
x_test = x_test.astype("float32")/255.0

# adiconar uma dimensão de canal = 1 (imagem preta e branca)
x_train = x_train[...,tf.newaxis]
x_test = x_test[...,tf.newaxis]

# Rede CNN
model = keras.Sequential([
  layers.Conv2D(32,kernel.size=(3,3), activation = "relu", input_shape = (28,28,1)),
  layers.Flatten(), # transforma mapas de ativação em vetor 1D para conectar a uma camada densa.
  layers.Dense(128,activation = "relu"),
  layers.Dense(10, activation = "softmax"), #10 classes (dígitos 0–9)
])

model.compile(optmizer="adam", loss = "sparse_categorical_crossentropy", metrics = ["accuracy"])

model.fit(x_train, y_train, batch_size=128, epochs=5, validation_split=0.1)

test_loss, test_acc = model.evaluate(x_test, y_test, verbose=1)
print(f"Acurácia no teste: {test_acc:.4f}")
